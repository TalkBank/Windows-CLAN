// Machine generated IDispatch wrapper class(es) created by Microsoft Visual C++

// NOTE: Do not modify the contents of this file.  If this class is regenerated by
//  Microsoft Visual C++, your modifications will be overwritten.


#include "stdafx.h"
#include "mediaplayer.h"

/////////////////////////////////////////////////////////////////////////////
// CMediaPlayer

IMPLEMENT_DYNCREATE(CMediaPlayer, CWnd)

/////////////////////////////////////////////////////////////////////////////
// CMediaPlayer properties

/////////////////////////////////////////////////////////////////////////////
// CMediaPlayer operations

double CMediaPlayer::GetCurrentPosition()
{
	double result;
	InvokeHelper(0x403, DISPATCH_PROPERTYGET, VT_R8, (void*)&result, NULL);
	return result;
}

void CMediaPlayer::SetCurrentPosition(double newValue)
{
	static BYTE parms[] =
		VTS_R8;
	InvokeHelper(0x403, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, parms,
		 newValue);
}

double CMediaPlayer::GetDuration()
{
	double result;
	InvokeHelper(0x3eb, DISPATCH_PROPERTYGET, VT_R8, (void*)&result, NULL);
	return result;
}

long CMediaPlayer::GetImageSourceWidth()
{
	long result;
	InvokeHelper(0x3e9, DISPATCH_PROPERTYGET, VT_I4, (void*)&result, NULL);
	return result;
}

long CMediaPlayer::GetImageSourceHeight()
{
	long result;
	InvokeHelper(0x3ea, DISPATCH_PROPERTYGET, VT_I4, (void*)&result, NULL);
	return result;
}

long CMediaPlayer::GetMarkerCount()
{
	long result;
	InvokeHelper(0x3f2, DISPATCH_PROPERTYGET, VT_I4, (void*)&result, NULL);
	return result;
}

BOOL CMediaPlayer::GetCanScan()
{
	BOOL result;
	InvokeHelper(0x3f3, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&result, NULL);
	return result;
}

BOOL CMediaPlayer::GetCanSeek()
{
	BOOL result;
	InvokeHelper(0x3f4, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&result, NULL);
	return result;
}

BOOL CMediaPlayer::GetCanSeekToMarkers()
{
	BOOL result;
	InvokeHelper(0x417, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&result, NULL);
	return result;
}

long CMediaPlayer::GetCurrentMarker()
{
	long result;
	InvokeHelper(0x405, DISPATCH_PROPERTYGET, VT_I4, (void*)&result, NULL);
	return result;
}

void CMediaPlayer::SetCurrentMarker(long nNewValue)
{
	static BYTE parms[] =
		VTS_I4;
	InvokeHelper(0x405, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, parms,
		 nNewValue);
}

CString CMediaPlayer::GetFileName()
{
	CString result;
	InvokeHelper(0x402, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&result, NULL);
	return result;
}

void CMediaPlayer::SetFileName(LPCTSTR lpszNewValue)
{
	static BYTE parms[] =
		VTS_BSTR;
	InvokeHelper(0x402, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, parms,
		 lpszNewValue);
}

CString CMediaPlayer::GetSourceLink()
{
	CString result;
	InvokeHelper(0x3f1, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&result, NULL);
	return result;
}

DATE CMediaPlayer::GetCreationDate()
{
	DATE result;
	InvokeHelper(0x40c, DISPATCH_PROPERTYGET, VT_DATE, (void*)&result, NULL);
	return result;
}

CString CMediaPlayer::GetErrorCorrection()
{
	CString result;
	InvokeHelper(0x40e, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&result, NULL);
	return result;
}

long CMediaPlayer::GetBandwidth()
{
	long result;
	InvokeHelper(0x40d, DISPATCH_PROPERTYGET, VT_I4, (void*)&result, NULL);
	return result;
}

long CMediaPlayer::GetSourceProtocol()
{
	long result;
	InvokeHelper(0x424, DISPATCH_PROPERTYGET, VT_I4, (void*)&result, NULL);
	return result;
}

long CMediaPlayer::GetReceivedPackets()
{
	long result;
	InvokeHelper(0x40f, DISPATCH_PROPERTYGET, VT_I4, (void*)&result, NULL);
	return result;
}

long CMediaPlayer::GetRecoveredPackets()
{
	long result;
	InvokeHelper(0x410, DISPATCH_PROPERTYGET, VT_I4, (void*)&result, NULL);
	return result;
}

long CMediaPlayer::GetLostPackets()
{
	long result;
	InvokeHelper(0x411, DISPATCH_PROPERTYGET, VT_I4, (void*)&result, NULL);
	return result;
}

long CMediaPlayer::GetReceptionQuality()
{
	long result;
	InvokeHelper(0x412, DISPATCH_PROPERTYGET, VT_I4, (void*)&result, NULL);
	return result;
}

long CMediaPlayer::GetBufferingCount()
{
	long result;
	InvokeHelper(0x413, DISPATCH_PROPERTYGET, VT_I4, (void*)&result, NULL);
	return result;
}

BOOL CMediaPlayer::GetIsBroadcast()
{
	BOOL result;
	InvokeHelper(0x422, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&result, NULL);
	return result;
}

long CMediaPlayer::GetBufferingProgress()
{
	long result;
	InvokeHelper(0x438, DISPATCH_PROPERTYGET, VT_I4, (void*)&result, NULL);
	return result;
}

CString CMediaPlayer::GetChannelName()
{
	CString result;
	InvokeHelper(0x41a, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&result, NULL);
	return result;
}

CString CMediaPlayer::GetChannelDescription()
{
	CString result;
	InvokeHelper(0x41b, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&result, NULL);
	return result;
}

CString CMediaPlayer::GetChannelURL()
{
	CString result;
	InvokeHelper(0x41c, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&result, NULL);
	return result;
}

CString CMediaPlayer::GetContactAddress()
{
	CString result;
	InvokeHelper(0x41d, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&result, NULL);
	return result;
}

CString CMediaPlayer::GetContactPhone()
{
	CString result;
	InvokeHelper(0x41e, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&result, NULL);
	return result;
}

CString CMediaPlayer::GetContactEmail()
{
	CString result;
	InvokeHelper(0x41f, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&result, NULL);
	return result;
}

double CMediaPlayer::GetBufferingTime()
{
	double result;
	InvokeHelper(0x42e, DISPATCH_PROPERTYGET, VT_R8, (void*)&result, NULL);
	return result;
}

void CMediaPlayer::SetBufferingTime(double newValue)
{
	static BYTE parms[] =
		VTS_R8;
	InvokeHelper(0x42e, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, parms,
		 newValue);
}

BOOL CMediaPlayer::GetAutoStart()
{
	BOOL result;
	InvokeHelper(0x3f9, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&result, NULL);
	return result;
}

void CMediaPlayer::SetAutoStart(BOOL bNewValue)
{
	static BYTE parms[] =
		VTS_BOOL;
	InvokeHelper(0x3f9, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, parms,
		 bNewValue);
}

BOOL CMediaPlayer::GetAutoRewind()
{
	BOOL result;
	InvokeHelper(0x3fa, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&result, NULL);
	return result;
}

void CMediaPlayer::SetAutoRewind(BOOL bNewValue)
{
	static BYTE parms[] =
		VTS_BOOL;
	InvokeHelper(0x3fa, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, parms,
		 bNewValue);
}

double CMediaPlayer::GetRate()
{
	double result;
	InvokeHelper(0x404, DISPATCH_PROPERTYGET, VT_R8, (void*)&result, NULL);
	return result;
}

void CMediaPlayer::SetRate(double newValue)
{
	static BYTE parms[] =
		VTS_R8;
	InvokeHelper(0x404, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, parms,
		 newValue);
}

BOOL CMediaPlayer::GetSendKeyboardEvents()
{
	BOOL result;
	InvokeHelper(0x3f5, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&result, NULL);
	return result;
}

void CMediaPlayer::SetSendKeyboardEvents(BOOL bNewValue)
{
	static BYTE parms[] =
		VTS_BOOL;
	InvokeHelper(0x3f5, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, parms,
		 bNewValue);
}

BOOL CMediaPlayer::GetSendMouseClickEvents()
{
	BOOL result;
	InvokeHelper(0x3f6, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&result, NULL);
	return result;
}

void CMediaPlayer::SetSendMouseClickEvents(BOOL bNewValue)
{
	static BYTE parms[] =
		VTS_BOOL;
	InvokeHelper(0x3f6, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, parms,
		 bNewValue);
}

BOOL CMediaPlayer::GetSendMouseMoveEvents()
{
	BOOL result;
	InvokeHelper(0x3f7, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&result, NULL);
	return result;
}

void CMediaPlayer::SetSendMouseMoveEvents(BOOL bNewValue)
{
	static BYTE parms[] =
		VTS_BOOL;
	InvokeHelper(0x3f7, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, parms,
		 bNewValue);
}

long CMediaPlayer::GetPlayCount()
{
	long result;
	InvokeHelper(0x406, DISPATCH_PROPERTYGET, VT_I4, (void*)&result, NULL);
	return result;
}

void CMediaPlayer::SetPlayCount(long nNewValue)
{
	static BYTE parms[] =
		VTS_I4;
	InvokeHelper(0x406, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, parms,
		 nNewValue);
}

BOOL CMediaPlayer::GetClickToPlay()
{
	BOOL result;
	InvokeHelper(0x401, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&result, NULL);
	return result;
}

void CMediaPlayer::SetClickToPlay(BOOL bNewValue)
{
	static BYTE parms[] =
		VTS_BOOL;
	InvokeHelper(0x401, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, parms,
		 bNewValue);
}

BOOL CMediaPlayer::GetAllowScan()
{
	BOOL result;
	InvokeHelper(0x40b, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&result, NULL);
	return result;
}

void CMediaPlayer::SetAllowScan(BOOL bNewValue)
{
	static BYTE parms[] =
		VTS_BOOL;
	InvokeHelper(0x40b, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, parms,
		 bNewValue);
}

BOOL CMediaPlayer::GetEnableContextMenu()
{
	BOOL result;
	InvokeHelper(0x3fd, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&result, NULL);
	return result;
}

void CMediaPlayer::SetEnableContextMenu(BOOL bNewValue)
{
	static BYTE parms[] =
		VTS_BOOL;
	InvokeHelper(0x3fd, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, parms,
		 bNewValue);
}

long CMediaPlayer::GetCursorType()
{
	long result;
	InvokeHelper(0x414, DISPATCH_PROPERTYGET, VT_I4, (void*)&result, NULL);
	return result;
}

void CMediaPlayer::SetCursorType(long nNewValue)
{
	static BYTE parms[] =
		VTS_I4;
	InvokeHelper(0x414, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, parms,
		 nNewValue);
}

long CMediaPlayer::GetCodecCount()
{
	long result;
	InvokeHelper(0x421, DISPATCH_PROPERTYGET, VT_I4, (void*)&result, NULL);
	return result;
}

BOOL CMediaPlayer::GetAllowChangeDisplaySize()
{
	BOOL result;
	InvokeHelper(0x420, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&result, NULL);
	return result;
}

void CMediaPlayer::SetAllowChangeDisplaySize(BOOL bNewValue)
{
	static BYTE parms[] =
		VTS_BOOL;
	InvokeHelper(0x420, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, parms,
		 bNewValue);
}

BOOL CMediaPlayer::GetIsDurationValid()
{
	BOOL result;
	InvokeHelper(0x423, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&result, NULL);
	return result;
}

long CMediaPlayer::GetOpenState()
{
	long result;
	InvokeHelper(0x425, DISPATCH_PROPERTYGET, VT_I4, (void*)&result, NULL);
	return result;
}

BOOL CMediaPlayer::GetSendOpenStateChangeEvents()
{
	BOOL result;
	InvokeHelper(0x426, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&result, NULL);
	return result;
}

void CMediaPlayer::SetSendOpenStateChangeEvents(BOOL bNewValue)
{
	static BYTE parms[] =
		VTS_BOOL;
	InvokeHelper(0x426, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, parms,
		 bNewValue);
}

BOOL CMediaPlayer::GetSendWarningEvents()
{
	BOOL result;
	InvokeHelper(0x427, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&result, NULL);
	return result;
}

void CMediaPlayer::SetSendWarningEvents(BOOL bNewValue)
{
	static BYTE parms[] =
		VTS_BOOL;
	InvokeHelper(0x427, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, parms,
		 bNewValue);
}

BOOL CMediaPlayer::GetSendErrorEvents()
{
	BOOL result;
	InvokeHelper(0x428, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&result, NULL);
	return result;
}

void CMediaPlayer::SetSendErrorEvents(BOOL bNewValue)
{
	static BYTE parms[] =
		VTS_BOOL;
	InvokeHelper(0x428, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, parms,
		 bNewValue);
}

long CMediaPlayer::GetPlayState()
{
	long result;
	InvokeHelper(0x42c, DISPATCH_PROPERTYGET, VT_I4, (void*)&result, NULL);
	return result;
}

BOOL CMediaPlayer::GetSendPlayStateChangeEvents()
{
	BOOL result;
	InvokeHelper(0x42d, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&result, NULL);
	return result;
}

void CMediaPlayer::SetSendPlayStateChangeEvents(BOOL bNewValue)
{
	static BYTE parms[] =
		VTS_BOOL;
	InvokeHelper(0x42d, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, parms,
		 bNewValue);
}

long CMediaPlayer::GetDisplaySize()
{
	long result;
	InvokeHelper(0x408, DISPATCH_PROPERTYGET, VT_I4, (void*)&result, NULL);
	return result;
}

void CMediaPlayer::SetDisplaySize(long nNewValue)
{
	static BYTE parms[] =
		VTS_I4;
	InvokeHelper(0x408, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, parms,
		 nNewValue);
}

BOOL CMediaPlayer::GetInvokeURLs()
{
	BOOL result;
	InvokeHelper(0x3fc, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&result, NULL);
	return result;
}

void CMediaPlayer::SetInvokeURLs(BOOL bNewValue)
{
	static BYTE parms[] =
		VTS_BOOL;
	InvokeHelper(0x3fc, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, parms,
		 bNewValue);
}

CString CMediaPlayer::GetBaseURL()
{
	CString result;
	InvokeHelper(0x43a, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&result, NULL);
	return result;
}

void CMediaPlayer::SetBaseURL(LPCTSTR lpszNewValue)
{
	static BYTE parms[] =
		VTS_BSTR;
	InvokeHelper(0x43a, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, parms,
		 lpszNewValue);
}

CString CMediaPlayer::GetDefaultFrame()
{
	CString result;
	InvokeHelper(0x43b, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&result, NULL);
	return result;
}

void CMediaPlayer::SetDefaultFrame(LPCTSTR lpszNewValue)
{
	static BYTE parms[] =
		VTS_BSTR;
	InvokeHelper(0x43b, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, parms,
		 lpszNewValue);
}

BOOL CMediaPlayer::GetHasError()
{
	BOOL result;
	InvokeHelper(0x429, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&result, NULL);
	return result;
}

CString CMediaPlayer::GetErrorDescription()
{
	CString result;
	InvokeHelper(0x42a, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&result, NULL);
	return result;
}

long CMediaPlayer::GetErrorCode()
{
	long result;
	InvokeHelper(0x42b, DISPATCH_PROPERTYGET, VT_I4, (void*)&result, NULL);
	return result;
}

BOOL CMediaPlayer::GetAnimationAtStart()
{
	BOOL result;
	InvokeHelper(0x415, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&result, NULL);
	return result;
}

void CMediaPlayer::SetAnimationAtStart(BOOL bNewValue)
{
	static BYTE parms[] =
		VTS_BOOL;
	InvokeHelper(0x415, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, parms,
		 bNewValue);
}

BOOL CMediaPlayer::GetTransparentAtStart()
{
	BOOL result;
	InvokeHelper(0x3fe, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&result, NULL);
	return result;
}

void CMediaPlayer::SetTransparentAtStart(BOOL bNewValue)
{
	static BYTE parms[] =
		VTS_BOOL;
	InvokeHelper(0x3fe, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, parms,
		 bNewValue);
}

long CMediaPlayer::GetVolume()
{
	long result;
	InvokeHelper(0x13, DISPATCH_PROPERTYGET, VT_I4, (void*)&result, NULL);
	return result;
}

void CMediaPlayer::SetVolume(long nNewValue)
{
	static BYTE parms[] =
		VTS_I4;
	InvokeHelper(0x13, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, parms,
		 nNewValue);
}

long CMediaPlayer::GetBalance()
{
	long result;
	InvokeHelper(0x14, DISPATCH_PROPERTYGET, VT_I4, (void*)&result, NULL);
	return result;
}

void CMediaPlayer::SetBalance(long nNewValue)
{
	static BYTE parms[] =
		VTS_I4;
	InvokeHelper(0x14, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, parms,
		 nNewValue);
}

long CMediaPlayer::GetReadyState()
{
	long result;
	InvokeHelper(DISPID_READYSTATE, DISPATCH_PROPERTYGET, VT_I4, (void*)&result, NULL);
	return result;
}

double CMediaPlayer::GetSelectionStart()
{
	double result;
	InvokeHelper(0xf, DISPATCH_PROPERTYGET, VT_R8, (void*)&result, NULL);
	return result;
}

void CMediaPlayer::SetSelectionStart(double newValue)
{
	static BYTE parms[] =
		VTS_R8;
	InvokeHelper(0xf, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, parms,
		 newValue);
}

double CMediaPlayer::GetSelectionEnd()
{
	double result;
	InvokeHelper(0x10, DISPATCH_PROPERTYGET, VT_R8, (void*)&result, NULL);
	return result;
}

void CMediaPlayer::SetSelectionEnd(double newValue)
{
	static BYTE parms[] =
		VTS_R8;
	InvokeHelper(0x10, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, parms,
		 newValue);
}

BOOL CMediaPlayer::GetShowDisplay()
{
	BOOL result;
	InvokeHelper(0x16, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&result, NULL);
	return result;
}

void CMediaPlayer::SetShowDisplay(BOOL bNewValue)
{
	static BYTE parms[] =
		VTS_BOOL;
	InvokeHelper(0x16, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, parms,
		 bNewValue);
}

BOOL CMediaPlayer::GetShowControls()
{
	BOOL result;
	InvokeHelper(0x17, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&result, NULL);
	return result;
}

void CMediaPlayer::SetShowControls(BOOL bNewValue)
{
	static BYTE parms[] =
		VTS_BOOL;
	InvokeHelper(0x17, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, parms,
		 bNewValue);
}

BOOL CMediaPlayer::GetShowPositionControls()
{
	BOOL result;
	InvokeHelper(0x18, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&result, NULL);
	return result;
}

void CMediaPlayer::SetShowPositionControls(BOOL bNewValue)
{
	static BYTE parms[] =
		VTS_BOOL;
	InvokeHelper(0x18, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, parms,
		 bNewValue);
}

BOOL CMediaPlayer::GetShowTracker()
{
	BOOL result;
	InvokeHelper(0x1a, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&result, NULL);
	return result;
}

void CMediaPlayer::SetShowTracker(BOOL bNewValue)
{
	static BYTE parms[] =
		VTS_BOOL;
	InvokeHelper(0x1a, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, parms,
		 bNewValue);
}

BOOL CMediaPlayer::GetEnablePositionControls()
{
	BOOL result;
	InvokeHelper(0x1b, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&result, NULL);
	return result;
}

void CMediaPlayer::SetEnablePositionControls(BOOL bNewValue)
{
	static BYTE parms[] =
		VTS_BOOL;
	InvokeHelper(0x1b, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, parms,
		 bNewValue);
}

BOOL CMediaPlayer::GetEnableTracker()
{
	BOOL result;
	InvokeHelper(0x1d, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&result, NULL);
	return result;
}

void CMediaPlayer::SetEnableTracker(BOOL bNewValue)
{
	static BYTE parms[] =
		VTS_BOOL;
	InvokeHelper(0x1d, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, parms,
		 bNewValue);
}

BOOL CMediaPlayer::GetEnabled()
{
	BOOL result;
	InvokeHelper(DISPID_ENABLED, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&result, NULL);
	return result;
}

void CMediaPlayer::SetEnabled(BOOL bNewValue)
{
	static BYTE parms[] =
		VTS_BOOL;
	InvokeHelper(DISPID_ENABLED, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, parms,
		 bNewValue);
}

unsigned long CMediaPlayer::GetDisplayForeColor()
{
	unsigned long result;
	InvokeHelper(0x24, DISPATCH_PROPERTYGET, VT_I4, (void*)&result, NULL);
	return result;
}

void CMediaPlayer::SetDisplayForeColor(unsigned long newValue)
{
	static BYTE parms[] =
		VTS_I4;
	InvokeHelper(0x24, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, parms,
		 newValue);
}

unsigned long CMediaPlayer::GetDisplayBackColor()
{
	unsigned long result;
	InvokeHelper(0x25, DISPATCH_PROPERTYGET, VT_I4, (void*)&result, NULL);
	return result;
}

void CMediaPlayer::SetDisplayBackColor(unsigned long newValue)
{
	static BYTE parms[] =
		VTS_I4;
	InvokeHelper(0x25, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, parms,
		 newValue);
}

long CMediaPlayer::GetDisplayMode()
{
	long result;
	InvokeHelper(0x20, DISPATCH_PROPERTYGET, VT_I4, (void*)&result, NULL);
	return result;
}

void CMediaPlayer::SetDisplayMode(long nNewValue)
{
	static BYTE parms[] =
		VTS_I4;
	InvokeHelper(0x20, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, parms,
		 nNewValue);
}

BOOL CMediaPlayer::GetVideoBorder3D()
{
	BOOL result;
	InvokeHelper(0x44f, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&result, NULL);
	return result;
}

void CMediaPlayer::SetVideoBorder3D(BOOL bNewValue)
{
	static BYTE parms[] =
		VTS_BOOL;
	InvokeHelper(0x44f, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, parms,
		 bNewValue);
}

long CMediaPlayer::GetVideoBorderWidth()
{
	long result;
	InvokeHelper(0x44d, DISPATCH_PROPERTYGET, VT_I4, (void*)&result, NULL);
	return result;
}

void CMediaPlayer::SetVideoBorderWidth(long nNewValue)
{
	static BYTE parms[] =
		VTS_I4;
	InvokeHelper(0x44d, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, parms,
		 nNewValue);
}

unsigned long CMediaPlayer::GetVideoBorderColor()
{
	unsigned long result;
	InvokeHelper(0x44e, DISPATCH_PROPERTYGET, VT_I4, (void*)&result, NULL);
	return result;
}

void CMediaPlayer::SetVideoBorderColor(unsigned long newValue)
{
	static BYTE parms[] =
		VTS_I4;
	InvokeHelper(0x44e, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, parms,
		 newValue);
}

BOOL CMediaPlayer::GetShowGotoBar()
{
	BOOL result;
	InvokeHelper(0x440, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&result, NULL);
	return result;
}

void CMediaPlayer::SetShowGotoBar(BOOL bNewValue)
{
	static BYTE parms[] =
		VTS_BOOL;
	InvokeHelper(0x440, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, parms,
		 bNewValue);
}

BOOL CMediaPlayer::GetShowStatusBar()
{
	BOOL result;
	InvokeHelper(0x43e, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&result, NULL);
	return result;
}

void CMediaPlayer::SetShowStatusBar(BOOL bNewValue)
{
	static BYTE parms[] =
		VTS_BOOL;
	InvokeHelper(0x43e, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, parms,
		 bNewValue);
}

BOOL CMediaPlayer::GetShowCaptioning()
{
	BOOL result;
	InvokeHelper(0x43c, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&result, NULL);
	return result;
}

void CMediaPlayer::SetShowCaptioning(BOOL bNewValue)
{
	static BYTE parms[] =
		VTS_BOOL;
	InvokeHelper(0x43c, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, parms,
		 bNewValue);
}

BOOL CMediaPlayer::GetShowAudioControls()
{
	BOOL result;
	InvokeHelper(0x453, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&result, NULL);
	return result;
}

void CMediaPlayer::SetShowAudioControls(BOOL bNewValue)
{
	static BYTE parms[] =
		VTS_BOOL;
	InvokeHelper(0x453, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, parms,
		 bNewValue);
}

CString CMediaPlayer::GetCaptioningID()
{
	CString result;
	InvokeHelper(0x43d, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&result, NULL);
	return result;
}

void CMediaPlayer::SetCaptioningID(LPCTSTR lpszNewValue)
{
	static BYTE parms[] =
		VTS_BSTR;
	InvokeHelper(0x43d, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, parms,
		 lpszNewValue);
}

BOOL CMediaPlayer::GetMute()
{
	BOOL result;
	InvokeHelper(0x441, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&result, NULL);
	return result;
}

void CMediaPlayer::SetMute(BOOL bNewValue)
{
	static BYTE parms[] =
		VTS_BOOL;
	InvokeHelper(0x441, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, parms,
		 bNewValue);
}

BOOL CMediaPlayer::GetCanPreview()
{
	BOOL result;
	InvokeHelper(0x445, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&result, NULL);
	return result;
}

BOOL CMediaPlayer::GetPreviewMode()
{
	BOOL result;
	InvokeHelper(0x443, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&result, NULL);
	return result;
}

void CMediaPlayer::SetPreviewMode(BOOL bNewValue)
{
	static BYTE parms[] =
		VTS_BOOL;
	InvokeHelper(0x443, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, parms,
		 bNewValue);
}

BOOL CMediaPlayer::GetHasMultipleItems()
{
	BOOL result;
	InvokeHelper(0x446, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&result, NULL);
	return result;
}

long CMediaPlayer::GetLanguage()
{
	long result;
	InvokeHelper(0x447, DISPATCH_PROPERTYGET, VT_I4, (void*)&result, NULL);
	return result;
}

void CMediaPlayer::SetLanguage(long nNewValue)
{
	static BYTE parms[] =
		VTS_I4;
	InvokeHelper(0x447, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, parms,
		 nNewValue);
}

long CMediaPlayer::GetAudioStream()
{
	long result;
	InvokeHelper(0x448, DISPATCH_PROPERTYGET, VT_I4, (void*)&result, NULL);
	return result;
}

void CMediaPlayer::SetAudioStream(long nNewValue)
{
	static BYTE parms[] =
		VTS_I4;
	InvokeHelper(0x448, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, parms,
		 nNewValue);
}

CString CMediaPlayer::GetSAMIStyle()
{
	CString result;
	InvokeHelper(0x449, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&result, NULL);
	return result;
}

void CMediaPlayer::SetSAMIStyle(LPCTSTR lpszNewValue)
{
	static BYTE parms[] =
		VTS_BSTR;
	InvokeHelper(0x449, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, parms,
		 lpszNewValue);
}

CString CMediaPlayer::GetSAMILang()
{
	CString result;
	InvokeHelper(0x44a, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&result, NULL);
	return result;
}

void CMediaPlayer::SetSAMILang(LPCTSTR lpszNewValue)
{
	static BYTE parms[] =
		VTS_BSTR;
	InvokeHelper(0x44a, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, parms,
		 lpszNewValue);
}

CString CMediaPlayer::GetSAMIFileName()
{
	CString result;
	InvokeHelper(0x44b, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&result, NULL);
	return result;
}

void CMediaPlayer::SetSAMIFileName(LPCTSTR lpszNewValue)
{
	static BYTE parms[] =
		VTS_BSTR;
	InvokeHelper(0x44b, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, parms,
		 lpszNewValue);
}

long CMediaPlayer::GetStreamCount()
{
	long result;
	InvokeHelper(0x44c, DISPATCH_PROPERTYGET, VT_I4, (void*)&result, NULL);
	return result;
}

CString CMediaPlayer::GetClientId()
{
	CString result;
	InvokeHelper(0x452, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&result, NULL);
	return result;
}

long CMediaPlayer::GetConnectionSpeed()
{
	long result;
	InvokeHelper(0x459, DISPATCH_PROPERTYGET, VT_I4, (void*)&result, NULL);
	return result;
}

BOOL CMediaPlayer::GetAutoSize()
{
	BOOL result;
	InvokeHelper(0xfffffe0c, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&result, NULL);
	return result;
}

void CMediaPlayer::SetAutoSize(BOOL bNewValue)
{
	static BYTE parms[] =
		VTS_BOOL;
	InvokeHelper(0xfffffe0c, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, parms,
		 bNewValue);
}

BOOL CMediaPlayer::GetEnableFullScreenControls()
{
	BOOL result;
	InvokeHelper(0x454, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&result, NULL);
	return result;
}

void CMediaPlayer::SetEnableFullScreenControls(BOOL bNewValue)
{
	static BYTE parms[] =
		VTS_BOOL;
	InvokeHelper(0x454, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, parms,
		 bNewValue);
}

LPDISPATCH CMediaPlayer::GetActiveMovie()
{
	LPDISPATCH result;
	InvokeHelper(0x455, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&result, NULL);
	return result;
}

LPDISPATCH CMediaPlayer::GetNSPlay()
{
	LPDISPATCH result;
	InvokeHelper(0x456, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&result, NULL);
	return result;
}

BOOL CMediaPlayer::GetWindowlessVideo()
{
	BOOL result;
	InvokeHelper(0x458, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&result, NULL);
	return result;
}

void CMediaPlayer::SetWindowlessVideo(BOOL bNewValue)
{
	static BYTE parms[] =
		VTS_BOOL;
	InvokeHelper(0x458, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, parms,
		 bNewValue);
}

void CMediaPlayer::Play()
{
	InvokeHelper(0x7d1, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

void CMediaPlayer::Stop()
{
	InvokeHelper(0x7d3, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

void CMediaPlayer::Pause()
{
	InvokeHelper(0x7d2, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

double CMediaPlayer::GetMarkerTime(long MarkerNum)
{
	double result;
	static BYTE parms[] =
		VTS_I4;
	InvokeHelper(0x7d4, DISPATCH_METHOD, VT_R8, (void*)&result, parms,
		MarkerNum);
	return result;
}

CString CMediaPlayer::GetMarkerName(long MarkerNum)
{
	CString result;
	static BYTE parms[] =
		VTS_I4;
	InvokeHelper(0x7d5, DISPATCH_METHOD, VT_BSTR, (void*)&result, parms,
		MarkerNum);
	return result;
}

void CMediaPlayer::AboutBox()
{
	InvokeHelper(0xfffffdd8, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

BOOL CMediaPlayer::GetCodecInstalled(long CodecNum)
{
	BOOL result;
	static BYTE parms[] =
		VTS_I4;
	InvokeHelper(0x7d7, DISPATCH_METHOD, VT_BOOL, (void*)&result, parms,
		CodecNum);
	return result;
}

CString CMediaPlayer::GetCodecDescription(long CodecNum)
{
	CString result;
	static BYTE parms[] =
		VTS_I4;
	InvokeHelper(0x7d8, DISPATCH_METHOD, VT_BSTR, (void*)&result, parms,
		CodecNum);
	return result;
}

CString CMediaPlayer::GetCodecURL(long CodecNum)
{
	CString result;
	static BYTE parms[] =
		VTS_I4;
	InvokeHelper(0x7d9, DISPATCH_METHOD, VT_BSTR, (void*)&result, parms,
		CodecNum);
	return result;
}

CString CMediaPlayer::GetMoreInfoURL(long MoreInfoType)
{
	CString result;
	static BYTE parms[] =
		VTS_I4;
	InvokeHelper(0x7db, DISPATCH_METHOD, VT_BSTR, (void*)&result, parms,
		MoreInfoType);
	return result;
}

CString CMediaPlayer::GetMediaInfoString(long MediaInfoType)
{
	CString result;
	static BYTE parms[] =
		VTS_I4;
	InvokeHelper(0x7e0, DISPATCH_METHOD, VT_BSTR, (void*)&result, parms,
		MediaInfoType);
	return result;
}

void CMediaPlayer::Cancel()
{
	InvokeHelper(0x7d6, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

void CMediaPlayer::Open(LPCTSTR bstrFileName)
{
	static BYTE parms[] =
		VTS_BSTR;
	InvokeHelper(0x7da, DISPATCH_METHOD, VT_EMPTY, NULL, parms,
		 bstrFileName);
}

BOOL CMediaPlayer::IsSoundCardEnabled()
{
	BOOL result;
	InvokeHelper(0x35, DISPATCH_METHOD, VT_BOOL, (void*)&result, NULL);
	return result;
}

void CMediaPlayer::Next()
{
	InvokeHelper(0x7e7, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

void CMediaPlayer::Previous()
{
	InvokeHelper(0x7e6, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

void CMediaPlayer::StreamSelect(long StreamNum)
{
	static BYTE parms[] =
		VTS_I4;
	InvokeHelper(0x7df, DISPATCH_METHOD, VT_EMPTY, NULL, parms,
		 StreamNum);
}

void CMediaPlayer::FastForward()
{
	InvokeHelper(0x7e8, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

void CMediaPlayer::FastReverse()
{
	InvokeHelper(0x7e9, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

CString CMediaPlayer::GetStreamName(long StreamNum)
{
	CString result;
	static BYTE parms[] =
		VTS_I4;
	InvokeHelper(0x7e3, DISPATCH_METHOD, VT_BSTR, (void*)&result, parms,
		StreamNum);
	return result;
}

long CMediaPlayer::GetStreamGroup(long StreamNum)
{
	long result;
	static BYTE parms[] =
		VTS_I4;
	InvokeHelper(0x7e4, DISPATCH_METHOD, VT_I4, (void*)&result, parms,
		StreamNum);
	return result;
}

BOOL CMediaPlayer::GetStreamSelected(long StreamNum)
{
	BOOL result;
	static BYTE parms[] =
		VTS_I4;
	InvokeHelper(0x7e5, DISPATCH_METHOD, VT_BOOL, (void*)&result, parms,
		StreamNum);
	return result;
}

LPDISPATCH CMediaPlayer::GetDvd()
{
	LPDISPATCH result;
	InvokeHelper(0x5dc, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&result, NULL);
	return result;
}

CString CMediaPlayer::GetMediaParameter(long EntryNum, LPCTSTR bstrParameterName)
{
	CString result;
	static BYTE parms[] =
		VTS_I4 VTS_BSTR;
	InvokeHelper(0x7ec, DISPATCH_METHOD, VT_BSTR, (void*)&result, parms,
		EntryNum, bstrParameterName);
	return result;
}

CString CMediaPlayer::GetMediaParameterName(long EntryNum, long Index)
{
	CString result;
	static BYTE parms[] =
		VTS_I4 VTS_I4;
	InvokeHelper(0x7ed, DISPATCH_METHOD, VT_BSTR, (void*)&result, parms,
		EntryNum, Index);
	return result;
}

long CMediaPlayer::GetEntryCount()
{
	long result;
	InvokeHelper(0x7ee, DISPATCH_PROPERTYGET, VT_I4, (void*)&result, NULL);
	return result;
}

long CMediaPlayer::GetCurrentEntry()
{
	long result;
	InvokeHelper(0x7ef, DISPATCH_METHOD, VT_I4, (void*)&result, NULL);
	return result;
}

void CMediaPlayer::SetCurrentEntry(long EntryNumber)
{
	static BYTE parms[] =
		VTS_I4;
	InvokeHelper(0x7f0, DISPATCH_METHOD, VT_EMPTY, NULL, parms,
		 EntryNumber);
}

void CMediaPlayer::ShowDialog(long mpDialogIndex)
{
	static BYTE parms[] =
		VTS_I4;
	InvokeHelper(0x7f1, DISPATCH_METHOD, VT_EMPTY, NULL, parms,
		 mpDialogIndex);
}
